from telegram import Update, BotCommand
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
from src.rag_system import RAGSystem
import os
from dotenv import load_dotenv

load_dotenv()

# –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º RAG —Å–∏—Å—Ç–µ–º—É
rag = RAGSystem(os.getenv("OPENAI_API_KEY"))

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /start"""
    welcome_text = """ü§ñ –ü—Ä–∏–≤–µ—Ç! –Ø RAG-–±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º.

üìã –ö–æ–º–∞–Ω–¥—ã:
/start - —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ  
/reload - –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏–∑ –ø–∞–ø–∫–∏
/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã
/clear - –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞

üí° –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å, –∏ —è –Ω–∞–π–¥—É –æ—Ç–≤–µ—Ç –≤ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö!"""

    await update.message.reply_text(welcome_text)

async def reload_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /reload"""
    loading_msg = await update.message.reply_text("üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞—é –¥–æ–∫—É–º–µ–Ω—Ç—ã...")
    
    success, message = rag.reload_documents()
    
    if success:
        await loading_msg.edit_text(f"‚úÖ {message}")
    else:
        await loading_msg.edit_text(f"‚ùå {message}")

async def stats_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /stats"""
    stats = rag.get_stats()
    
    stats_text = f"""üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã:

üìÑ –í—Å–µ–≥–æ —á–∞—Å—Ç–µ–π –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {stats['total_chunks']}
üìÅ –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: {stats['total_sources']}

üìö –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:"""
    
    if stats['sources']:
        for source in stats['sources']:
            stats_text += f"\n‚Ä¢ {source}"
    else:
        stats_text += "\n(–¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã)"
    
    await update.message.reply_text(stats_text)

async def clear_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /clear"""
    user_id = update.effective_user.id
    if user_id in rag.chat_history:
        del rag.chat_history[user_id]
    
    await update.message.reply_text("üóëÔ∏è –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ –æ—á–∏—â–µ–Ω–∞")

async def handle_question(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    question = update.message.text
    user_id = update.effective_user.id
    
    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã
    if len(rag.vector_store.documents) == 0:
        await update.message.reply_text(
            "‚ö†Ô∏è –î–æ–∫—É–º–µ–Ω—Ç—ã –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /reload –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏–∑ –ø–∞–ø–∫–∏."
        )
        return
    
    # –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º
    thinking_msg = await update.message.reply_text("ü§î –ò—â—É –æ—Ç–≤–µ—Ç –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö...")
    
    # –ø–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç RAG —Å–∏—Å—Ç–µ–º—ã
    result = rag.ask_question(user_id, question)
    
    if result['success']:
        response = f"ü§ñ {result['answer']}"
        
        if result['sources']:
            sources_text = ", ".join(result['sources'])
            response += f"\n\nüìö –ò—Å—Ç–æ—á–Ω–∏–∫–∏: {sources_text}"
            response += f"\nüìä –ù–∞–π–¥–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {result['found_docs']}"
        
        await thinking_msg.edit_text(response)
    else:
        await thinking_msg.edit_text(f"‚ùå {result['answer']}")

def create_bot():
    """–°–æ–∑–¥–∞–µ—Ç –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –±–æ—Ç–∞"""
    bot_token = os.getenv("BOT_TOKEN")
    
    if not bot_token:
        raise ValueError("BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
    
    app = Application.builder().token(bot_token).build()
    
    # —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    app.add_handler(CommandHandler("start", start_command))
    app.add_handler(CommandHandler("reload", reload_command))
    app.add_handler(CommandHandler("stats", stats_command))
    app.add_handler(CommandHandler("clear", clear_command))
    
    # –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_question))
    
    return app
